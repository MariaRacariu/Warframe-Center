export = WorldState;
declare class WorldState {
    /**
     * Generates the worldstate json as a string into usable objects
     * @param {string} json The worldstate JSON string
     * @param {Dependency} [deps] The options object
     */
    constructor(json: string, deps?: Dependency);
    /**
     * The date and time at which the World State was generated
     * @type {Date}
     */
    timestamp: Date;
    /**
     * The in-game news
     * @type {Array.<News>}
     */
    news: Array<News>;
    /**
     * The current events
     * @type {Array.<WorldEvent>}
     */
    events: Array<WorldEvent>;
    /**
     * The current alerts
     * @type {Array.<Alert>}
     */
    alerts: Array<Alert>;
    /**
     * The current syndicate missions
     * @type {Array.<SyndicateMission>}
     */
    syndicateMissions: Array<SyndicateMission>;
    /**
     * The current fissures: 'ActiveMissions' & 'VoidStorms'
     * @type {Array.<News>}
     */
    fissures: Array<News>;
    /**
     * The current global upgrades
     * @type {Array.<GlobalUpgrade>}
     */
    globalUpgrades: Array<GlobalUpgrade>;
    /**
     * The current flash sales
     * @type {Array.<FlashSale>}
     */
    flashSales: Array<FlashSale>;
    /**
     * The current invasions
     * @type {Array.<Invasion>}
     */
    invasions: Array<Invasion>;
    /**
     * The state of the dark sectors
     * @type {Array.<DarkSector>}
     */
    darkSectors: Array<DarkSector>;
    /**
     * The current daily deals
     * @type {Array.<DailyDeal>}
     */
    dailyDeals: Array<DailyDeal>;
    /**
     * The state of the sanctuary synthesis targets
     * @type {Simaris}
     */
    simaris: Simaris;
    /**
     * The current conclave challenges
     * @type {Array.<ConclaveChallenge>}
     */
    conclaveChallenges: Array<ConclaveChallenge>;
    /**
     * The currently active persistent enemies
     * @type {Array.<PersistentEnemy>}
     */
    persistentEnemies: Array<PersistentEnemy>;
    /**
     * The current earth cycle
     * @type {EarthCycle}
     */
    earthCycle: EarthCycle;
    /**
     * The current Cetus cycle
     * @type {CetusCycle}
     */
    cetusCycle: CetusCycle;
    /**
     * Cambion Drift Cycle
     * @type {CambionCycle}
     */
    cambionCycle: CambionCycle;
    /**
     * The current Zariman cycle based off current time
     * @type {ZarimanCycle}
     */
    zarimanCycle: ZarimanCycle;
    /**
     * Weekly challenges
     * @type {Array.<WeeklyChallenge>}
     */
    weeklyChallenges: Array<WeeklyChallenge>;
    /**
     * The Current construction progress for Fomorians/Razorback/etc.
     * @type {ConstructionProgress}
     */
    constructionProgress: ConstructionProgress;
    /**
     * The current Orb Vallis cycle state
     * @type {VallisCycle}
     */
    vallisCycle: VallisCycle;
    /**
     * The current nightwave season
     * @type {Nightwave}
     */
    nightwave: Nightwave;
    arbitration: any;
    /**
     * Current syndicate outposts
     * @type {SentientOutpost}
     */
    sentientOutposts: SentientOutpost;
    /**
     * Steel path offering rotation
     * @type {SteelPathOffering}
     */
    steelPath: SteelPathOffering;
}
import News = require("./News");
import WorldEvent = require("./WorldEvent");
import Alert = require("./Alert");
import SyndicateMission = require("./SyndicateMission");
import GlobalUpgrade = require("./GlobalUpgrade");
import FlashSale = require("./FlashSale");
import Invasion = require("./Invasion");
import DarkSector = require("./DarkSector");
import DailyDeal = require("./DailyDeal");
import Simaris = require("./Simaris");
import ConclaveChallenge = require("./ConclaveChallenge");
import PersistentEnemy = require("./PersistentEnemy");
import EarthCycle = require("./EarthCycle");
import CetusCycle = require("./CetusCycle");
import WeeklyChallenge = require("./WeeklyChallenge");
import ConstructionProgress = require("./ConstructionProgress");
import VallisCycle = require("./VallisCycle");
import Nightwave = require("./Nightwave");
import SentientOutpost = require("./SentientOutpost");
import SteelPathOffering = require("./SteelPathOffering");
