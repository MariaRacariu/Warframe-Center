export = SyndicateJob;
/**
 * Represents a syndicate daily mission
 * @extends {WorldstateObject}
 */
declare class SyndicateJob extends WorldstateObject {
    /**
     * @param {Object} data The syndicate mission data
     * @param {Date} expiry The syndicate job expiration
     * @param {Object} deps The dependencies object
     * @param {Object} timeDate Time/Date functions
     * @param {Translator} translator The string translator
     * @param {string} locale Locale to use for translations
     */
    constructor(data: any, expiry: Date, { translator, timeDate, locale }: any);
    /**
     * Array of strings describing rewards
     * @type {Array.<String>}
     */
    rewardPool: Array<string>;
    /**
     * The type of job this is
     * @type {String}
     */
    type: string;
    /**
     * Array of enemy levels
     * @type {Array.<number>}
     */
    enemyLevels: Array<number>;
    /**
     * Array of standing gains per stage of job
     * @type {Array.<number>}
     */
    standingStages: Array<number>;
    /**
     * Minimum mastery required to participate
     * @type {Number}
     */
    minMR: number;
    /**
     * Whether or not this is a Vault job.
     * No indication for difference of normal vs arcana vaults.
     * @type {Boolean}
     */
    isVault: boolean;
    /**
     * Corresponding chamber. Nullable
     * @type {string|null}
     */
    locationTag: string | null;
    /**
     * What time phase this bounty is bound to
     * @type {string}
     */
    timeBound: string;
    timeBoound: string;
}
import WorldstateObject = require("./WorldstateObject");
