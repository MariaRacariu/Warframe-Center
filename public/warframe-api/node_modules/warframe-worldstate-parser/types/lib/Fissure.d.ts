export = Fissure;
declare class Fissure extends WorldstateObject {
    /**
     * @param   {Object}             data            The fissure data
     * @param   {Object}             deps            The dependencies object
     * @param   {Translator}         deps.translator The string translator
     * @param   {TimeDateFunctions}  deps.timeDate   The time and date functions
     * @param   {string}             deps.locale     Locale to use for translations
     */
    constructor(data: any, { translator, timeDate, locale }: {
        translator: Translator;
        timeDate: TimeDateFunctions;
        locale: string;
    });
    /**
     * The node where the fissure has appeared
     * @type {string}
     */
    node: string;
    /**
     * The fissure mission type
     * @type {string}
     */
    missionType: string;
    /**
     * The fissure mission type key
     * @type {string}
     */
    missionKey: string;
    /**
     * The faction controlling the node where the fissure has appeared
     * @type {string}
     */
    enemy: string;
    /**
     * Faction enum for the faction controlling the node where the fissure has appeared
     * @type {string}
     */
    enemyKey: string;
    /**
     * The node key where the fissure has appeared
     * @type {string}
     */
    nodeKey: string;
    /**
     * The fissure's tier
     * @type {string}
     */
    tier: string;
    /**
     * The fissure's tier as a number
     * @type {number}
     */
    tierNum: number;
    /**
     * Whether this is expired (at time of object creation)
     * @type {boolean}
     */
    expired: boolean;
    /**
     * ETA string (at time of object creation)
     * @type {String}
     */
    eta: string;
    /**
     * Whether this fissure corresponds to a RailJack Void Storm
     * @type {Boolean}
     */
    isStorm: boolean;
    /**
     * Whether this fissure is a Steel Path fissure
     * @type {boolean}
     */
    isHard: boolean;
    /**
     * Get whether this deal has expired
     * @returns {boolean}
     */
    getExpired(): boolean;
    /**
     * Get a string representation of how long the void fissure will remain active
     * @returns {string}
     */
    getETAString(): string;
}
import WorldstateObject = require("./WorldstateObject");
